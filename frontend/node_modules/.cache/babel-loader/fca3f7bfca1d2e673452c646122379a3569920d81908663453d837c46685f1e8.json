{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirob\\\\OneDrive\\\\Desktop\\\\roxiler_systems\\\\frontend\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BarChart() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/api/product/barChartsInfo\", {\n          params: {\n            page: 1,\n            limit: 10,\n            search: \"\"\n          }\n        });\n        //   const response = await fetch('?month=');\n        const result = await response.json();\n        setData(result.result);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  data.sort((a, b) => {\n    const rangeA = a._id.split('-').map(Number);\n    const rangeB = b._id.split('-').map(Number);\n    return rangeA[0] - rangeB[0];\n  });\n  const chartData = {\n    labels: data.map(d => d._id),\n    datasets: [{\n      label: 'Range',\n      data: data.map(item => item.count)\n    }]\n  };\n  data.forEach(element => {\n    console.log(element._id, \"===>\", element.count);\n  });\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 4\n  }, this);\n}\n_s(BarChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","axios","jsxDEV","_jsxDEV","BarChart","_s","data","setData","fetchData","response","get","params","page","limit","search","result","json","error","console","sort","a","b","rangeA","_id","split","map","Number","rangeB","chartData","labels","d","datasets","label","item","count","forEach","element","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nirob/OneDrive/Desktop/roxiler_systems/frontend/src/components/BarChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport axios from \"axios\";\r\n\r\nfunction BarChart() {\r\n\r\n    const [data, setData] = useState([]);\r\n    \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get(\r\n                \"http://localhost:3000/api/product/barChartsInfo\",\r\n                {\r\n                  params: {\r\n                    page: 1,\r\n                    limit: 10,\r\n                    search: \"\",\r\n                  },\r\n                }\r\n              );  \r\n        //   const response = await fetch('?month=');\r\n          const result = await response.json();\r\n          setData(result.result);\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, []);\r\n    data.sort((a, b) => {\r\n      \r\n        const rangeA = a._id.split('-').map(Number);\r\n        const rangeB = b._id.split('-').map(Number);\r\n      \r\n        return rangeA[0] - rangeB[0];\r\n      });\r\n    const chartData = {\r\n        labels: data.map((d) => d._id),\r\n        datasets: [\r\n          {\r\n            label: 'Range',\r\n            data: data.map((item) => item.count),\r\n          },\r\n        ],\r\n      };\r\n   data.forEach(element => {\r\n    console.log(element._id,\"===>\",element.count);\r\n   });\r\n\r\n\r\n   return (\r\n   <Bar data={chartData} />\r\n   );\r\n}\r\n\r\nexport default BarChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC5B,iDAAiD,EACjD;UACEC,MAAM,EAAE;YACNC,IAAI,EAAE,CAAC;YACPC,KAAK,EAAE,EAAE;YACTC,MAAM,EAAE;UACV;QACF,CACF,CAAC;QACP;QACE,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACpCT,OAAO,CAACQ,MAAM,CAACA,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACNF,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAEhB,MAAMC,MAAM,GAAGF,CAAC,CAACG,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IAC3C,MAAMC,MAAM,GAAGN,CAAC,CAACE,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IAE3C,OAAOJ,MAAM,CAAC,CAAC,CAAC,GAAGK,MAAM,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC;EACJ,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAEvB,IAAI,CAACmB,GAAG,CAAEK,CAAC,IAAKA,CAAC,CAACP,GAAG,CAAC;IAC9BQ,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACd1B,IAAI,EAAEA,IAAI,CAACmB,GAAG,CAAEQ,IAAI,IAAKA,IAAI,CAACC,KAAK;IACrC,CAAC;EAEL,CAAC;EACJ5B,IAAI,CAAC6B,OAAO,CAACC,OAAO,IAAI;IACvBlB,OAAO,CAACmB,GAAG,CAACD,OAAO,CAACb,GAAG,EAAC,MAAM,EAACa,OAAO,CAACF,KAAK,CAAC;EAC9C,CAAC,CAAC;EAGF,oBACA/B,OAAA,CAACL,GAAG;IAACQ,IAAI,EAAEsB;EAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE3B;AAACpC,EAAA,CAnDQD,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}