{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirob\\\\OneDrive\\\\Desktop\\\\roxiler_systems\\\\frontend\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import Chart from 'chart.js/auto'; // Import Chart object\n\n// const BarChart = () => {\n//   const [data, setData] = useState([]);\n\n//   useEffect(() => {\n//     if (data.length > 0) {\n//       const ctx = document.getElementById('yourCanvasId');\n//       new Chart(ctx, {\n//         type: 'bar',\n//         data: barChartData,\n//         options: {\n//           scales: {\n//             x: {\n//               type: 'category', // or 'categoryAxis'\n//               labels: labels,\n//             },\n//             y: {\n//               beginAtZero: true, // adjust as needed\n//             },\n//           },\n//         },\n//       });\n//     }\n//   }, [data]);\n\n//   // Create a new array for labels and counts\n//   const labels = data.map((d) => d._id);\n//   const counts = data.map((d) => d.count);\n\n//   const barChartData = {\n//     labels: labels,\n//     datasets: [\n//       {\n//         label: 'Range',\n//         data: counts,\n//       },\n//     ],\n//   };\n\n//   return <canvas id=\"yourCanvasId\" />;\n// };\n\n// export default BarChart;\n\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BarChart = () => {\n  _s();\n  const [barChartData, setBarChartData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/product/barChartsInfo?month=November');\n        const data = await response.json();\n        setBarChartData(data.result);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: barChartData,\n      options: {\n        plugins: {\n          title: {\n            display: true,\n            text: \"Users Gained between 2016-2020\"\n          },\n          legend: {\n            display: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"973F2gpMZpDTLCgKPKN5aX9uHaA=\");\n_c = BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","jsxDEV","_jsxDEV","BarChart","_s","barChartData","setBarChartData","fetchData","response","fetch","data","json","result","error","console","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","options","plugins","title","display","text","legend","_c","$RefreshReg$"],"sources":["C:/Users/nirob/OneDrive/Desktop/roxiler_systems/frontend/src/components/BarChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import { Bar } from 'react-chartjs-2';\r\n// import Chart from 'chart.js/auto'; // Import Chart object\r\n\r\n// const BarChart = () => {\r\n//   const [data, setData] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     if (data.length > 0) {\r\n//       const ctx = document.getElementById('yourCanvasId');\r\n//       new Chart(ctx, {\r\n//         type: 'bar',\r\n//         data: barChartData,\r\n//         options: {\r\n//           scales: {\r\n//             x: {\r\n//               type: 'category', // or 'categoryAxis'\r\n//               labels: labels,\r\n//             },\r\n//             y: {\r\n//               beginAtZero: true, // adjust as needed\r\n//             },\r\n//           },\r\n//         },\r\n//       });\r\n//     }\r\n//   }, [data]);\r\n\r\n//   // Create a new array for labels and counts\r\n//   const labels = data.map((d) => d._id);\r\n//   const counts = data.map((d) => d.count);\r\n\r\n//   const barChartData = {\r\n//     labels: labels,\r\n//     datasets: [\r\n//       {\r\n//         label: 'Range',\r\n//         data: counts,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return <canvas id=\"yourCanvasId\" />;\r\n// };\r\n\r\n// export default BarChart;\r\n\r\n\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\nexport const BarChart = () => {\r\n    const [barChartData, setBarChartData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:3000/api/product/barChartsInfo?month=November');\r\n          const data = await response.json();\r\n          setBarChartData(data.result);\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, []);  \r\n  return (\r\n    <div className=\"chart-container\">\r\n      <h2 style={{ textAlign: \"center\" }}>Bar Chart</h2>\r\n      <Bar\r\n        data={barChartData}\r\n        options={{\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: \"Users Gained between 2016-2020\"\r\n            },\r\n            legend: {\r\n              display: false\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAIA,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,CAAC;QAC9F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,eAAe,CAACI,IAAI,CAACE,MAAM,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACR,oBACEL,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bd,OAAA;MAAIe,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDpB,OAAA,CAACF,GAAG;MACFU,IAAI,EAAEL,YAAa;MACnBkB,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR,CAAC;UACDC,MAAM,EAAE;YACNF,OAAO,EAAE;UACX;QACF;MACF;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCWD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}